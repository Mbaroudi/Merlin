#
# Copyright (c) 2015 EPAM Systems, Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
# Redistributions in binary form must reproduce the above copyright notice, this
# list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
# Neither the name of the EPAM Systems, Inc. nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# See the NOTICE file and the LICENSE file distributed with this work
# for additional information regarding copyright ownership and licensing.
#

log.segment.bytes=1073741824
socket.send.buffer.bytes=102400
num.network.threads=3
log.flush.scheduler.interval.ms=3000
kafka.ganglia.metrics.host=localhost
message.max.bytes=1000000
replica.lag.time.max.ms=10000
num.io.threads=8
fetch.purgatory.purge.interval.requests=10000
replica.lag.max.messages=4000
port=9010
kafka.metrics.reporters=kafka.ganglia.KafkaGangliaMetricsReporter
kafka.ganglia.metrics.reporter.enabled=true
producer.purgatory.purge.interval.requests=10000
default.replication.factor=1
replica.high.watermark.checkpoint.interval.ms=5000
zookeeper.connect=sandbox.hortonworks.com:2181
controlled.shutdown.retry.backoff.ms=5000
num.partitions=5
log.flush.interval.messages=10000
controller.socket.timeout.ms=30000
queued.max.requests=500
controlled.shutdown.max.retries=3
replica.fetch.wait.max.ms=500
controlled.shutdown.enable=false
log.roll.hours=168
replica.socket.receive.buffer.bytes=65536
log.retention.bytes=-1
zookeeper.connection.timeout.ms=6000
replica.fetch.max.bytes=1048576
num.replica.fetchers=1
socket.request.max.bytes=104857600
log.cleanup.interval.mins=10
zookeeper.sync.time.ms=2000
log.index.interval.bytes=4096
broker.id=1111
kafka.ganglia.metrics.group=kafka
controller.message.queue.size=10
host.name=localhost
log.flush.interval.ms=3000
log.dirs=/tmp/kafka-test
replica.fetch.min.bytes=1
replica.socket.timeout.ms=30000
zookeeper.session.timeout.ms=6000
auto.create.topics.enable=true
log.index.size.max.bytes=10485760
kafka.ganglia.metrics.port=8671
socket.receive.buffer.bytes=102400
log.retention.hours=168
delete.topic.enable=true